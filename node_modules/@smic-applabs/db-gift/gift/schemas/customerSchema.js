const getSchemas = Schema => {
     const CustomerSchema = new Schema({
       userid: String,
       firstName: String, //{ type: String, required: true }, // { type: String, required: true }, from estore-graph // registration for apple does not require firstName and lastName
       lastName: String, //{ type: String, required: true }, // { type: String, required: true }, from estore-graph // registration for apple does not require firstName and lastName
       middleName: String,
       suffix: String,
       email: { type: String }, // { type: String, unique: true }, //{ type: String, unique: true, required: true, sparse: true }, from estore-graph Extracted for external index
       mobile: String,
       phone: String,
       socialFlag: String,
       gender: String,
       birthday: Date,
       primaryAddress: {
         type: Schema.Types.ObjectId,
       },
       primaryLoyalty: { type: Schema.Types.ObjectId },
       password: { type: String },
       failedCount: { type: Number, default: 0 },
       picture: String,
       emailStatus: String,
       dpa: { type: Boolean, default: false },
       loyaltyAgreement: { type: Boolean, default: false },
       createdDate: { type: Date, default: new Date() }, // from estore-graph
       status: String,
       disabledDate: Date,
       tokenCount: { type: Number, default: 0 }, // used by jwt refresh token
       verifyKey: String, // email verification key
       forgotPwKey: String, // forgot password key
       forgotPwExp: Date,
       loginAppIds: Array,
       registerAppId: String,
       lastPasswordChange: Date,
       deletedDate: Date,
     })
   
      
     const CustomerAddressSchema = new Schema({
       address: String, //for Google maps/places
       address2: String, //for Google maps/places
       streetAddress: String,
       cityAddress: String,
       firstName: String,
       lastName: String,
       mobile: String,
       phone: String,
       customerId: { type: Schema.Types.ObjectId }, 
       zipCode: String,
       lat: Number,
       lng: Number,
       label: String,
       shipping: { type: Boolean, default: false },
       billing: { type: Boolean, default: false },
     })
   
     return {
       CustomerSchema,
       CustomerAddressSchema
     }
   }
   
   module.exports = getSchemas
   